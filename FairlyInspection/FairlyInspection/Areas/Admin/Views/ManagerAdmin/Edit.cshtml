@model FairlyInspection.Areas.Admin.ViewModels.Manager.ManagerView
@{
    ViewBag.Title = "Edit";
    string editType = Model.ID == 0 ? "新增" : "編輯";
    var adminInfo = FairlyInspection.Utility.Helpers.AdminInfoHelper.GetAdminInfo();
    var type = adminInfo.Type;
}

<section class="content-header">
    <h1>
        分派管理
    </h1>
</section>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">@editType</h3>
                </div>

                @using (Html.BeginForm("Edit", "ManagerAdmin", FormMethod.Post, new { enctype = "multipart/form-data", @id = "Edit_Form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.CreateDate)
                    @Html.HiddenFor(model => model.Creater)
                    @Html.HiddenFor(model => model.newAssignList)

                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = "50" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Account)
                            @if (Model.ID != 0)
                            {
                                <input type="text" value="@Model.Account" class="form-control" disabled />
                                @Html.HiddenFor(model => model.Account)
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.Account, new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password)<input type="checkbox" class="ion ion-eye" onclick="myFunction()">
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        @if (type < (int)FairlyInspection.Models.AdminType.Inspector)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, new { style = "margin-top: 15px !important;" })
                                @Html.DropDownListFor(model => model.Type, Model.AdminTypeOptions, new { @class = "form-control" })
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.Type)
                        }

                        <div class="form-check pretty p-switch p-fill" style="margin-bottom:10px;">
                            @Html.CheckBoxFor(model => model.Status, new { @class = "form-check-input" })
                            <div class="state p-success">
                                @Html.LabelFor(model => model.Status, new { @class = "form-check-label", @style = "font-weight:bold; " })
                            </div>
                        </div>
                        <div class="form-group">
                            @if (Model.AllSystemList != null)
                            {
                                foreach (var item in Model.AllSystemList.OrderBy(q => q.Level))
                                {
                                    string tchecked = item.IsSelected ? "checked" : "";
                                    string parentColor = "#4a4a4a";
                                    string levelColor = "#3c8dbc";
                                    string marginLeft = "0px";
                                    switch (item.Level)
                                    {
                                        case 1:
                                            parentColor = "#4a4a4a";
                                            levelColor = "#dd4b39";
                                            break;
                                        case 2:
                                            parentColor = "#dd4b39";
                                            levelColor = "#3c8dbc";
                                            marginLeft = "20px";
                                            break;
                                        case 3:
                                            parentColor = "#3c8dbc";
                                            levelColor = "#00a65a";
                                            marginLeft = "40px";
                                            break;
                                    }
                                    <div class="pretty p-icon p-curve p-jelly p-bigger" style="margin:5px;margin-left: @marginLeft;">
                                        <input type="checkbox" class="ckb_items" value="@item.ID" @tchecked>
                                        <div class="state p-info">
                                            <i class="icon fa fa-check"></i>
                                            <label>
                                                <strong style="color:@parentColor">@item.ParentStr</strong>
                                                -
                                                <strong style="color: @levelColor;">@item.Title</strong>
                                            </label>
                                        </div>
                                    </div>
                                    <br />
                                }
                            }
                        </div>
                    </div>
                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">儲存</button>
                        @if (adminInfo.Type == 1)
                        {
                            @Html.ActionLink("取消/回列表", "Index", null, new { @class = "btn btn-default" })
                            @Html.ActionLink("新增帳號", "Edit", new { id = 0 }, new { @class = "btn btn-primary", @style = "margin-left: 3px;" })
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section  scripts
{
    <script>
        var assignListArr = [];
        $(function () {
            assignListArr = '@Model.newAssignList'.split(',');

            $('#Edit_Form').on('click', function () {
                $('#newAssignList').val(assignListArr);
            });

            $('.ckb_items').on('click', function () {
                if ($(this).is(":checked")) {
                    assignListArr.push($(this).val());
                }
                else {
                    assignListArr.splice($.inArray($(this).val(), assignListArr), 1);
                }
            });
        })

        function myFunction() {
            var x = document.getElementById("Password");
            if (x.type === "password") {
                x.type = "text";
            } else {
                x.type = "password";
            }
        }
    </script>
}

