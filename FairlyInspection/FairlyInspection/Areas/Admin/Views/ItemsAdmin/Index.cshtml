@model FairlyInspection.Areas.Admin.ViewModels.Items.ItemsIndexView
@{
    var adminInfo = FairlyInspection.Utility.Helpers.AdminInfoHelper.GetAdminInfo();
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <strong>巡檢項目管理</strong>
        <a class="btn btn-default bg-navy" href="@Url.Action("Index", "ItemsAdmin")" style="border-radius:5px;">菲力巡檢項目</a><i class="fa fa-arrow-right" style="margin: 5px;"></i>
        @if (Model.ParentBreadList.Count() > 0)
        {
            foreach (var item in Model.ParentBreadList)
            {
                string btnclass = item.Level == 1 ? " btn-danger" : " btn-default bg-light-blue";
                <a class="btn @btnclass" href="@Url.Action("Edit", "ItemsAdmin", new { id = item.ID })" style="border-radius:5px;">@item.Title</a><i class="fa fa-arrow-right" style="margin: 5px;"></i>
            }
        }
        @*<label class="label label-default bg-olive">@Model.ParentStr</label>
        <span>附屬@(Model.LevelStr)</span>*@
    </h1>
</section>

<section class="content">
    <div class="row">
        <!--搜尋條件-->
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">搜尋</h3>
                    @if (Model.ParentID != 0)
                    {
                        @*@Html.ActionLink("返回" + FairlyInspection.Utility.Helpers.EnumHelper.GetDescription((FairlyInspection.Models.LevelClass)Model.Level - 1) + "列表", "Index", "ItemsAdmin", new { Level = Model.Level - 1}, new { @class = "btn btn-warning", @style = "margin-left:10px;" })*@
                        @Html.ActionLink("返回" + FairlyInspection.Utility.Helpers.EnumHelper.GetDescription((FairlyInspection.Models.LevelClass)Model.Level - 1) + "【" + Model.ParentStr + "】", "Edit", "ItemsAdmin", new { id = Model.ParentID }, new { @class = "btn btn-warning", @style = "margin-left:10px;" })
                    }
                </div>
                @using (Html.BeginForm("Index", "ItemsAdmin", FormMethod.Get, new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(model =>model.ParentID)
                    @Html.HiddenFor(model =>model.Level)
                    <div class="box-body">
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Title, new { @class = "col-sm-2 control-label" })*@
                            <label class="col-sm-2 control-label">搜尋@(Model.LevelStr)</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @placeholder = Model.LevelStr + "名稱" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsOnline, new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.IsOnline, "StatusDropDownList", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="submit" class="btn btn-info">搜尋</button>
                                @Html.ActionLink("新增" + Model.LevelStr, "Edit", "ItemsAdmin", new { ParentID = Model.ParentID, Level = Model.Level}, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!--清單-->
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">@Model.LevelStr 列表</h3>
                </div>
                <div class="box-body">
                    <div id="dataList_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                        @Html.Partial("_PageSizeAdmin", Model.PageResult)
                        <div class="row">
                            <div class="col-sm-12 table-responsive">
                                <table class="table table-bordered table-hover dataTable">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(x => x.Title)
                                            </th>
                                            @*<th>
                                                    @Html.DisplayNameFor(x => x.ParentID)
                                                </th>*@
                                            <th>
                                                @Html.DisplayNameFor(x => x.Level)
                                            </th>
                                            @if (Model.Level >= 3)
                                            {
                                                <th>
                                                    @Html.DisplayNameFor(x => x.Interval)
                                                </th>
                                            }
                                            <th data-sorting="IsOnline">
                                                @Html.DisplayNameFor(x => x.IsOnline)
                                            </th>
                                            <th data-sorting="EndDate">
                                                @Html.DisplayNameFor(x => x.CreateDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(x => x.Creater)
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.PageResult.Data)
                                        {
                                            <tr>
                                                <td>
                                                    <label class="label label-default bg-light-blue">@item.Title</label>
                                                </td>
                                                @*<td>
                                                        @item.ParentStr
                                                    </td>*@
                                                <td>
                                                    <label class="label label-default">@item.LevelStr</label>
                                                </td>
                                                @if (Model.Level >= 3)
                                                {
                                                    <td>
                                                        @if (item.MinLevel)
                                                        {
                                                        <span>@item.Interval 天</span>
                                                        }                                                        
                                                    </td>
                                                }
                                                <td>
                                                    @Html.DisplayFor(model => item.IsOnline, "_Status")
                                                </td>
                                                <td>
                                                    @item.CreateDate.ToString("yyyy/MM/dd HH:mm")
                                                </td>
                                                <td>
                                                    @item.CreaterStr
                                                </td>
                                                <td>
                                                    @*@if (adminInfo.ID == item.Creater)
                                                    {*@
                                                        @Html.ActionLink("編輯", "Edit", "ItemsAdmin", new { id = item.ID }, new { @class = "btn btn-primary", @style = "margin: 3px !important;" })
                                                        @if (item.Level < 5)
                                                        {
                                                            @Html.ActionLink("附屬項目", "Index", "ItemsAdmin", new { ParentID = item.ID, Level = item.Level + 1 }, new { @class = "btn btn-info", @style = "margin: 3px !important;" })
                                                        }
                                                        @Html.ActionLink("刪除", "Delete", "ItemsAdmin", new { id = item.ID }, new { @class = "btn btn-danger js-delete-confirm", @style = "margin: 3px !important;" })
                                                    @*}
                                                    else
                                                    {
                                                        @Html.ActionLink("查看", "Edit", "ItemsAdmin", new { id = item.ID }, new { @class = "btn btn-primary", @style = "margin: 3px !important;" })
                                                    }*@

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(x => x.Title)
                                            </th>
                                            @*<th>
                                                    @Html.DisplayNameFor(x => x.ParentID)
                                                </th>*@
                                            <th>
                                                @Html.DisplayNameFor(x => x.Level)
                                            </th>
                                            @if (Model.Level >= 3)
                                            {
                                                <th>
                                                    @Html.DisplayNameFor(x => x.Interval)
                                                </th>
                                            }
                                            <th data-sorting="StartDate">
                                                @Html.DisplayNameFor(x => x.IsOnline)
                                            </th>
                                            <th data-sorting="EndDate">
                                                @Html.DisplayNameFor(x => x.CreateDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(x => x.Creater)
                                            </th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                        @Html.Partial("_PageAdmin", Model.PageResult)
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script src="~/Scripts/Admin/page.js"></script>

    <!--datetimepicker-->
    @*<link href="~/Content/bootstrap-datetimepicker-master/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
        <script src="~/Content/bootstrap-datetimepicker-master/js/bootstrap-datetimepicker.js"></script>*@
    <script>
        $(function () {
            //datetimepicker
            setDateTime($("#StartDate"));
            setDateTime($("#EndDate"));

            //$.prototype.datetimepicker.DPGlobal.nonpunctuation = /[^ -\/:-@@\[-`{-~\t\n\rZ]+/g;
            //var currentDate = new Date();
            //currentDate.setMinutes(0, 0, 0);
            //currentDate.setHours(currentDate.getHours() + currentDate.getTimezoneOffset() / 60);
            //$('#StartDate').datetimepicker({
            //    todayHighlight: true,
            //    weekStart: 1,
            //    minView: 0,
            //    autoclose: true,
            //    //pickerPosition: 'bottom-left',
            //    format: 'yyyy/mm/dd hh:ii ',
            //    //timezone: 'UTC',
            //    startDate: currentDate,
            //});
            //$('#EndDate').datetimepicker({
            //    todayHighlight: true,
            //    weekStart: 1,
            //    minView: 0,
            //    autoclose: true,
            //    //pickerPosition: 'bottom-left',
            //    format: 'yyyy/mm/dd hh:ii ',
            //    //timezone: 'UTC',
            //    startDate: currentDate,
            //});
        });
    </script>

    <script src="~/Content/js/meeting.js"></script>
    <script>
        $(function () {
            ChangeFactory();
            $('#FactoryID').on('change', function () {
                ChangeFactory();
            });
        });
    </script>
}


